% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sequence_onehot.R
\name{step_sequence_onehot}
\alias{step_sequence_onehot}
\alias{tidy.step_sequence_onehot}
\title{Generate the basic set of text features}
\usage{
step_sequence_onehot(recipe, ..., role = NA, trained = FALSE,
  columns = NULL, length = 100, key = letters, prefix = "seq1hot",
  skip = FALSE, id = rand_id("sequence_onehot"))

\method{tidy}{step_sequence_onehot}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose variables.
For `step_sequence_onehot`, this indicates the variables to be encoded
into a list column. See [recipes::selections()] for more
details. For the `tidy` method, these are not currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the recipe has been
baked.}

\item{columns}{A list of tibble results that define the
encoding. This is `NULL` until the step is trained by
[recipes::prep.recipe()].}

\item{length}{A numeric, number of characters to keep before discarding. 
Defaults to 100.}

\item{key}{A character vector, characters to be mapped to integers. characters 
not in the key will be encoded as 0. Defaults to `letters`.}

\item{prefix}{A prefix for generated column names, default to "seq1hot".}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by [recipes::bake.recipe()]? While all
operations are baked when [recipes::prep.recipe()] is run, some
operations may not be able to be conducted on new data (e.g.
processing the outcome variable(s)). Care should be taken when
using `skip = TRUE` as it may affect the computations for
subsequent operations.}

\item{id}{A character string that is unique to this step to identify it}

\item{x}{A `step_sequence_onehot` object.}
}
\value{
An updated version of `recipe` with the new step added
 to the sequence of existing steps (if any).
}
\description{
`step_sequence_onehot` creates a *specification* of a recipe step that
 will convert a character predictor into a list of tokens.
}
\details{
This step will take a character column and returns a number of numeric 
columns equal to the number of functions in the list passed to the 
`extract_functions` argument. The default is a list of functions from the 
sequence_onehots package.

All the functions passed to `extract_functions` must take a character vector
as input and return a numeric vector of the same length, otherwise an error 
will be thrown.
}
\examples{
library(recipes)

data(okc_text)

okc_rec <- recipe(~ ., data = okc_text) \%>\%
  step_sequence_onehot(essay0) 
  
okc_obj <- okc_rec \%>\%
  prep(training = okc_text, retain = TRUE)

juice(okc_obj)
  
tidy(okc_rec, number = 1)
tidy(okc_obj, number = 1)

}
